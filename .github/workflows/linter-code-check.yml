name: Linter code check

on:
  push:
    branches:
      - main
      - stage
      - develop
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
      - stage
      - develop
      - testing-linter

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          pip install mypy

      - name: Cache Conda Environment
        id: cache-conda
        uses: actions/cache@v3
        with:
          path: ~/.conda/envs
          key: ${{ runner.os }}-conda-${{ hashFiles('**/environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      - name: Cache pip packages
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            **/venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Analysing templates with mypy
        run: |
          for dir in tasks/* ; do
            echo "Checking directory: $dir"
            if [ -f "$dir/environment.yml" ]; then
              echo "Setting up conda environment for $dir"
              conda env create -p "$dir/conda_env" -f "$dir/environment.yml"
              source activate "$dir/conda_env"
              conda install mypy
            elif [ -f "$dir/requirements.txt" ]; then
              echo "Setting up venv for $dir"
              python -m venv "$dir/venv"
              source "$dir/venv/bin/activate"
              pip install -r "$dir/requirements.txt"
              pip install mypy
            else
              echo "No environment file found in $dir, skipping environment setup"
            fi

            echo "Running mypy in $dir"
            mypy "$dir" --install-types
            echo "Re-running mypy in $dir"
            mypy "$dir"

            if [ -f "$dir/environment.yml" ]; then
              conda deactivate
            elif [ -f "$dir/requirements.txt" ]; then
              deactivate
            fi
          done
